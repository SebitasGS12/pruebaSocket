{
    "sourceFile": "sesion12/src/main/java/com/cibertec/BBDD/Server.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1716948955199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1716949312201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n package com.cibertec.BBDD;\r\n \r\n public class Server {\r\n-\r\n+    \r\n }\r\n"
                },
                {
                    "date": 1716949321741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,32 @@\n package com.cibertec.BBDD;\r\n \r\n+import java.io.IOException;\r\n+import java.net.ServerSocket;\r\n+import java.net.Socket;\r\n+\r\n public class Server {\r\n-    \r\n+      private static final int PORT = 13;\r\n+\r\n+    public Server(){\r\n+        try (ServerSocket serverSocket = new ServerSocket(PORT)) {\r\n+            System.out.println(\"1 >> Server started on port \" + PORT);\r\n+            while (true) {\r\n+                System.out.println(\"2 >> Waiting for client connection...\");\r\n+                Socket clientSocket = serverSocket.accept();\r\n+                System.out.println(\"3 >> New client connected: \" + clientSocket.getInetAddress().getHostAddress());\r\n+\r\n+                System.out.println(\" 4 >> Client Complete\");\r\n+\r\n+                clientSocket.close();\r\n+                System.out.println(\"5 >>  Client disconnected\");\r\n+            }\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public static void main(String[] args) {\r\n+        new Server();\r\n+    }\r\n+\r\n }\r\n"
                },
                {
                    "date": 1716949329351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+package com.cibertec.BBDD;\r\n+\r\n+import java.io.IOException;\r\n+import java.net.ServerSocket;\r\n+import java.net.Socket;\r\n+\r\n+public class Server {\r\n+\r\n+    private static final int PORT = 13;\r\n+\r\n+    public Server(){\r\n+        try (ServerSocket serverSocket = new ServerSocket(PORT)) {\r\n+            System.out.println(\"1 >> Server started on port \" + PORT);\r\n+            while (true) {\r\n+                System.out.println(\"2 >> Waiting for client connection...\");\r\n+                Socket clientSocket = serverSocket.accept();\r\n+                System.out.println(\"3 >> New client connected: \" + clientSocket.getInetAddress().getHostAddress());\r\n+\r\n+\r\n+                \r\n+\r\n+\r\n+                System.out.println(\" 4 >> Client Complete\");\r\n+\r\n+                clientSocket.close();\r\n+                System.out.println(\"5 >>  Client disconnected\");\r\n+            }\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public static void main(String[] args) {\r\n+        new Server();\r\n+    }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1716949336645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n                 Socket clientSocket = serverSocket.accept();\r\n                 System.out.println(\"3 >> New client connected: \" + clientSocket.getInetAddress().getHostAddress());\r\n \r\n \r\n-                \r\n+                //Flujo de actividades\r\n \r\n \r\n                 System.out.println(\" 4 >> Client Complete\");\r\n \r\n"
                },
                {
                    "date": 1716949350596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n                 Socket clientSocket = serverSocket.accept();\r\n                 System.out.println(\"3 >> New client connected: \" + clientSocket.getInetAddress().getHostAddress());\r\n \r\n \r\n-                //Flujo de actividades\r\n+                // Flujo de actividades\r\n \r\n \r\n                 System.out.println(\" 4 >> Client Complete\");\r\n \r\n"
                },
                {
                    "date": 1716950788159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,57 @@\n package com.cibertec.BBDD;\r\n \r\n+import java.io.DataInputStream;\r\n+import java.io.File;\r\n+import java.io.FileOutputStream;\r\n import java.io.IOException;\r\n import java.net.ServerSocket;\r\n import java.net.Socket;\r\n+import java.text.SimpleDateFormat;\r\n \r\n public class Server {\r\n-\r\n+    \r\n     private static final int PORT = 13;\r\n \r\n     public Server(){\r\n+        System.out.println(\"1 >> [ini] Server constructor\");\r\n+        \r\n         try (ServerSocket serverSocket = new ServerSocket(PORT)) {\r\n-            System.out.println(\"1 >> Server started on port \" + PORT);\r\n-            while (true) {\r\n-                System.out.println(\"2 >> Waiting for client connection...\");\r\n-                Socket clientSocket = serverSocket.accept();\r\n-                System.out.println(\"3 >> New client connected: \" + clientSocket.getInetAddress().getHostAddress());\r\n+            System.out.println(\"2 >> waiting for client...\");                \r\n+            while(true){\r\n+                Socket clienSocket = serverSocket.accept();\r\n+                System.out.println(\"3 >> accepted client connection...\");\r\n+                \r\n+                //Generar nombre del archivo\r\n+                SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\");\r\n+                String rutaArchivo = \"D:\\\\server\\\\JACINTO_G1_\" + sdf.format(new Date()) + \".zip\";\r\n+                File file = new File(rutaArchivo);\r\n+                System.out.println(\"Archivo creado: \" + file.getAbsolutePath());\r\n \r\n+                //Flujo de datos de entrada y salida\r\n+                FileOutputStream fos = new FileOutputStream(file);\r\n+                DataInputStream entrada = new DataInputStream(clienSocket.getInputStream());\r\n \r\n-                // Flujo de actividades\r\n+                //Recibiendo archivo\r\n+                byte[] buffer = new byte[1024];\r\n+                int count;\r\n+                while ((count = entrada.read(buffer)) > 0) {\r\n+                    fos.write(buffer, 0, count);\r\n+                }\r\n+                fos.close();\r\n+                System.out.println(\"Archivo recibido: \" + file.getAbsolutePath());\r\n \r\n-\r\n-                System.out.println(\" 4 >> Client Complete\");\r\n-\r\n-                clientSocket.close();\r\n-                System.out.println(\"5 >>  Client disconnected\");\r\n+                System.out.println(\"4 >> final for client...\");\r\n+                clienSocket.close();\r\n             }\r\n         } catch (IOException e) {\r\n             e.printStackTrace();\r\n         }\r\n+\r\n+\r\n     }\r\n \r\n+\r\n     public static void main(String[] args) {\r\n-        new Server();\r\n+        new Server();   \r\n     }\r\n-\r\n }\r\n"
                },
                {
                    "date": 1716950799085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import java.io.IOException;\r\n import java.net.ServerSocket;\r\n import java.net.Socket;\r\n import java.text.SimpleDateFormat;\r\n+import java.util.Date;\r\n \r\n public class Server {\r\n     \r\n     private static final int PORT = 13;\r\n"
                },
                {
                    "date": 1716953769765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n                 System.out.println(\"3 >> accepted client connection...\");\r\n                 \r\n                 //Generar nombre del archivo\r\n                 SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\");\r\n-                String rutaArchivo = \"D:\\\\server\\\\JACINTO_G1_\" + sdf.format(new Date()) + \".zip\";\r\n+                String rutaArchivo = \"D:\\\\server\\\\Goyzueta_G1_\" + sdf.format(new Date()) + \".zip\";\r\n                 File file = new File(rutaArchivo);\r\n                 System.out.println(\"Archivo creado: \" + file.getAbsolutePath());\r\n \r\n                 //Flujo de datos de entrada y salida\r\n@@ -55,36 +55,4 @@\n     public static void main(String[] args) {\r\n         new Server();   \r\n     }\r\n }\r\n-package com.cibertec.BBDD;\r\n-\r\n-import java.io.IOException;\r\n-import java.net.ServerSocket;\r\n-import java.net.Socket;\r\n-\r\n-public class Server {\r\n-      private static final int PORT = 13;\r\n-\r\n-    public Server(){\r\n-        try (ServerSocket serverSocket = new ServerSocket(PORT)) {\r\n-            System.out.println(\"1 >> Server started on port \" + PORT);\r\n-            while (true) {\r\n-                System.out.println(\"2 >> Waiting for client connection...\");\r\n-                Socket clientSocket = serverSocket.accept();\r\n-                System.out.println(\"3 >> New client connected: \" + clientSocket.getInetAddress().getHostAddress());\r\n-\r\n-                System.out.println(\" 4 >> Client Complete\");\r\n-\r\n-                clientSocket.close();\r\n-                System.out.println(\"5 >>  Client disconnected\");\r\n-            }\r\n-        } catch (IOException e) {\r\n-            e.printStackTrace();\r\n-        }\r\n-    }\r\n-\r\n-    public static void main(String[] args) {\r\n-        new Server();\r\n-    }\r\n-\r\n-}\r\n"
                },
                {
                    "date": 1716955893526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+package com.cibertec.BBDD;\r\n+\r\n+import java.io.DataInputStream;\r\n+import java.io.File;\r\n+import java.io.FileOutputStream;\r\n+import java.io.IOException;\r\n+import java.net.ServerSocket;\r\n+import java.net.Socket;\r\n+import java.text.SimpleDateFormat;\r\n+import java.util.Date;\r\n+\r\n+public class Server {\r\n+    \r\n+    private static final int PORT = 13;\r\n+\r\n+    public Server(){\r\n+        System.out.println(\"1 >> [ini] Server constructor\");\r\n+        \r\n+        try (ServerSocket serverSocket = new ServerSocket(PORT)) {\r\n+            System.out.println(\"2 >> waiting for client...\");                \r\n+            while(true){\r\n+                Socket clienSocket = serverSocket.accept();\r\n+                System.out.println(\"3 >> accepted client connection...\");\r\n+                \r\n+                //Generar nombre del archivo\r\n+                SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\");\r\n+                String rutaArchivo = \"D:\\\\server\\\\Goyzueta_G1_\" + sdf.format(new Date()) + \".zip\";\r\n+                File file = new File(rutaArchivo);\r\n+                System.out.println(\"Archivo creado: \" + file.getAbsolutePath());\r\n+\r\n+                //Flujo de datos de entrada y salida\r\n+                FileOutputStream fos = new FileOutputStream(file);\r\n+                DataInputStream entrada = new DataInputStream(clienSocket.getInputStream());\r\n+\r\n+                //Recibiendo archivo\r\n+                byte[] buffer = new byte[1024];\r\n+                int count;\r\n+                while ((count = entrada.read(buffer)) > 0) {\r\n+                    fos.write(buffer, 0, count);\r\n+                }\r\n+                fos.close();\r\n+                System.out.println(\"Archivo recibido: \" + file.getAbsolutePath());\r\n+\r\n+\r\n+\r\n+                \r\n+                System.out.println(\"4 >> final for client...\");\r\n+                clienSocket.close();\r\n+            }\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+\r\n+    }\r\n+\r\n+\r\n+    public static void main(String[] args) {\r\n+        new Server();   \r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1716955918817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+package com.cibertec.BBDD;\r\n+\r\n+import java.io.DataInputStream;\r\n+import java.io.File;\r\n+import java.io.FileOutputStream;\r\n+import java.io.IOException;\r\n+import java.net.ServerSocket;\r\n+import java.net.Socket;\r\n+import java.text.SimpleDateFormat;\r\n+import java.util.Date;\r\n+\r\n+public class Server {\r\n+    \r\n+    private static final int PORT = 13;\r\n+\r\n+    public Server(){\r\n+        System.out.println(\"1 >> [ini] Server constructor\");\r\n+        \r\n+        try (ServerSocket serverSocket = new ServerSocket(PORT)) {\r\n+            System.out.println(\"2 >> waiting for client...\");                \r\n+            while(true){\r\n+                Socket clienSocket = serverSocket.accept();\r\n+                System.out.println(\"3 >> accepted client connection...\");\r\n+                \r\n+                //Generar nombre del archivo\r\n+                SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\");\r\n+                String rutaArchivo = \"D:\\\\server\\\\Goyzueta_G1_\" + sdf.format(new Date()) + \".zip\";\r\n+                File file = new File(rutaArchivo);\r\n+                System.out.println(\"Archivo creado: \" + file.getAbsolutePath());\r\n+\r\n+                //Flujo de datos de entrada y salida\r\n+                FileOutputStream fos = new FileOutputStream(file);\r\n+                DataInputStream entrada = new DataInputStream(clienSocket.getInputStream());\r\n+\r\n+                //Recibiendo archivo\r\n+                byte[] buffer = new byte[1024];\r\n+                int count;\r\n+                while ((count = entrada.read(buffer)) > 0) {\r\n+                    fos.write(buffer, 0, count);\r\n+                }\r\n+                fos.close();\r\n+                System.out.println(\"Archivo recibido: \" + file.getAbsolutePath());\r\n+                    \r\n+\r\n+\r\n+\r\n+                System.out.println(\"4 >> final for client...\");\r\n+                clienSocket.close();\r\n+            }\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+\r\n+    }\r\n+\r\n+\r\n+    public static void main(String[] args) {\r\n+        new Server();   \r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1716955925707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n                 fos.close();\r\n                 System.out.println(\"Archivo recibido: \" + file.getAbsolutePath());\r\n                 \r\n \r\n-                \r\n+                Conexion.\r\n \r\n \r\n \r\n                 System.out.println(\"4 >> final for client...\");\r\n"
                },
                {
                    "date": 1716956023347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n public class Server {\r\n     \r\n     private static final int PORT = 13;\r\n-    \r\n+    private satic final\r\n     public Server(){\r\n         System.out.println(\"1 >> [ini] Server constructor\");\r\n         \r\n         try (ServerSocket serverSocket = new ServerSocket(PORT)) {\r\n"
                }
            ],
            "date": 1716948955199,
            "name": "Commit-0",
            "content": "package com.cibertec.BBDD;\r\n\r\npublic class Server {\r\n\r\n}\r\n"
        }
    ]
}